please note that copy one file and apply it and destroy it than change to the another file-
Provider file should be same as before in all the examples
  region must be "us-west-1"
  ami id must be "ami-010f8b02680f80998"

================
count parameter
1)
resource "aws_iam_user" "iam_users" {
  name = "user${count.index}"
  path = "/system/"
  count = 5
}

2)
variable "user_names" {
  type = list
  default = ["kushal","sachin","tyler","dane"]
}
resource "aws_iam_user" "iam_users" {
  name = var.user_names[count.index]
  path = "/system/"
  count = 4
}

3)
variable "user_names" {
  type = list(string)
  default = ["kushal","sachin","tyler","dane","yuvraj","techno","gaurav"]
}
resource "aws_iam_user" "iam_users" {
  name = var.user_names[count.index]
  path = "/system/"
  count = length(var.user_names)
}
===========================
conditional expression
1) 
variable "test" {}

resource "aws_instance" "ec2instance" {
  ami = "ami-010f8b02680f80998"
  instance_type = "t2.micro"
  count = var.test == "handle" ? 1 : 0
  }

give value on command line when asked. if you give handle, it will run 1 time otherwise 0 times
===============================
local example
1)
resource "aws_instance" "ec2instance" {
  ami = "ami-010f8b02680f80998"
  instance_type = t2.micro
  tags = local.common_tags
  }

locals {
  common_tags = {
    owner = "developer"
    service = "backend"
  }
}

2) variable "instancetype" {
  default = "t2.micro"
}

resource "aws_instance" "ec2instance" {
  ami = "ami-010f8b02680f80998"
  instance_type = var.instancetype
  tags = local.common_tags
  }

locals {
  common_tags = {
    owner = "developer"
    service = "backend.${var.instancetype}"
  }
}
=============================== 

